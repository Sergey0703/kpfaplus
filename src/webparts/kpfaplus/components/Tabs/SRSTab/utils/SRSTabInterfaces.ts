// src/webparts/kpfaplus/components/Tabs/SRSTab/utils/SRSTabInterfaces.ts

import { IDropdownOption } from '@fluentui/react';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ SRS
 */
export interface ISRSRecord {
  id: string;
  date: Date;
  dayOfWeek: string;
  hours: string; // –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "7.50"
  relief: boolean; // Relief checkbox
  startWork: {
    hours: string; // "08"
    minutes: string; // "00"
  };
  finishWork: {
    hours: string; // "16"
    minutes: string; // "00"
  };
  lunch: string; // –í—Ä–µ–º—è –æ–±–µ–¥–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö "30"
  typeOfLeave: string; // –¢–∏–ø –æ—Ç–ø—É—Å–∫–∞
  timeLeave: string; // –í—Ä–µ–º—è –æ—Ç–ø—É—Å–∫–∞ –≤ —á–∞—Å–∞—Ö "7.50"
  shift: number; // –ù–æ–º–µ—Ä —Å–º–µ–Ω—ã
  contract: string; // –ù–æ–º–µ—Ä –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ "1", "2", "3"
  contractCheck: boolean; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
  status: 'positive' | 'negative' | 'none'; // –°—Ç–∞—Ç—É—Å (üëç/üëé)
  srs: boolean; // –û—Ç–º–µ—Ç–∫–∞ SRS
  checked: boolean; // –î–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  deleted?: boolean; // –î–ª—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
}

/**
 * –û–ø—Ü–∏–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –≤ SRS —Ç–∞–±–ª–∏—Ü–µ
 */
export interface ISRSTableOptions {
  hours: IDropdownOption[]; // 00-23
  minutes: IDropdownOption[]; // 00, 05, 10, ..., 55
  lunchTimes: IDropdownOption[]; // 0, 5, 10, ..., 30
  leaveTypes: IDropdownOption[]; // –¢–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤
  contractNumbers: IDropdownOption[]; // 1, 2, 3
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSFilterControls
 */
export interface ISRSFilterControlsProps {
  fromDate: Date;
  toDate: Date;
  totalHours: string;
  isLoading: boolean;
  onFromDateChange: (date: Date | undefined) => void;
  onToDateChange: (date: Date | undefined) => void;
  onRefresh: () => void;
  onExportAll: () => void;
  onSave: () => void;
  onSaveChecked: () => void;
  hasChanges: boolean; // –ï—Å—Ç—å –ª–∏ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  hasCheckedItems: boolean; // –ï—Å—Ç—å –ª–∏ –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSTable
 */
export interface ISRSTableProps {
  items: ISRSRecord[];
  options: ISRSTableOptions;
  isLoading: boolean;
  onItemChange: (item: ISRSRecord, field: string, value: string | boolean | number | { hours: string; minutes: string }) => void;
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏:
  // onItemCheck: (itemId: string, checked: boolean) => void;
  // onSelectAll: (checked: boolean) => void;
  // allSelected: boolean;
  // hasSelectedItems: boolean;
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSTableRow
 */
export interface ISRSTableRowProps {
  item: ISRSRecord;
  options: ISRSTableOptions;
  isEven: boolean; // –î–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ —Å—Ç—Ä–æ–∫
  onItemChange: (item: ISRSRecord, field: string, value: string | boolean | number | { hours: string; minutes: string }) => void;
  // –£–±–∏—Ä–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏:
  // onItemCheck: (itemId: string, checked: boolean) => void;
}

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ SRS –≤–∫–ª–∞–¥–∫–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
 */
export interface ISRSTabState {
  fromDate: Date;
  toDate: Date;
  srsData: ISRSRecord[];
  totalHours: string;
  isLoading: boolean;
  error?: string;
  hasUnsavedChanges: boolean;
  selectedItems: Set<string>; // ID –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
}

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å SRS –¥–∞–Ω–Ω—ã–º–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
 */
export interface ISRSOperationParams {
  fromDate: Date;
  toDate: Date;
  staffId: string;
  managerId?: string;
  staffGroupId?: string;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ SRS
 */
export interface ISRSExportResult {
  success: boolean;
  fileName?: string;
  error?: string;
  recordsCount?: number;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è SRS
 */
export interface ISRSSaveResult {
  success: boolean;
  savedCount: number;
  failedCount: number;
  errors?: string[];
}