// src/webparts/kpfaplus/components/Tabs/SRSTab/utils/SRSTabInterfaces.ts

import { IDropdownOption } from '@fluentui/react';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ SRS
 * –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ Holiday –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
 */
export interface ISRSRecord {
  id: string;
  date: Date;
  dayOfWeek: string;
  hours: string; // –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "7.50"
  relief: boolean; // Relief checkbox
  startWork: {
    hours: string; // "08"
    minutes: string; // "00"
  };
  finishWork: {
    hours: string; // "16"
    minutes: string; // "00"
  };
  lunch: string; // –í—Ä–µ–º—è –æ–±–µ–¥–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö "30"
  typeOfLeave: string; // –¢–∏–ø –æ—Ç–ø—É—Å–∫–∞
  timeLeave: string; // –í—Ä–µ–º—è –æ—Ç–ø—É—Å–∫–∞ –≤ —á–∞—Å–∞—Ö "7.50"
  shift: number; // –ù–æ–º–µ—Ä —Å–º–µ–Ω—ã
  contract: string; // –ù–æ–º–µ—Ä –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ "1", "2", "3"
  contractCheck: boolean; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
  status: 'positive' | 'negative' | 'none'; // –°—Ç–∞—Ç—É—Å (üëç/üëé)
  srs: boolean; // –û—Ç–º–µ—Ç–∫–∞ SRS
  checked: boolean; // –î–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  deleted?: boolean; // –î–ª—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
  // *** –ù–û–í–û–ï: –ü–æ–ª–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ ***
  Holiday?: number; // –ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞: 1 = –ø—Ä–∞–∑–¥–Ω–∏–∫, 0 = —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (–∫–∞–∫ –≤ StaffRecords)
}

/**
 * *** –ù–û–í–´–ô –ò–ù–¢–ï–†–§–ï–ô–°: –î–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π —Å–º–µ–Ω—ã (–∞–Ω–∞–ª–æ–≥ –∏–∑ Schedule) ***
 */
export interface INewSRSShiftData {
  date: Date;
  timeForLunch: string;
  contract: string;
  contractNumber?: string;
  typeOfLeave?: string;
  Holiday?: number;
}

/**
 * –û–ø—Ü–∏–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –≤ SRS —Ç–∞–±–ª–∏—Ü–µ
 * –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤
 */
export interface ISRSTableOptions {
  hours: IDropdownOption[]; // 00-23
  minutes: IDropdownOption[]; // 00, 05, 10, ..., 55
  lunchTimes: IDropdownOption[]; // 0, 5, 10, ..., 30
  leaveTypes: IDropdownOption[]; // *** –û–ë–ù–û–í–õ–ï–ù–û: –¢–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ ***
  contractNumbers: IDropdownOption[]; // 1, 2, 3
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSFilterControls
 */
export interface ISRSFilterControlsProps {
  fromDate: Date;
  toDate: Date;
  totalHours: string;
  isLoading: boolean;
  onFromDateChange: (date: Date | undefined) => void;
  onToDateChange: (date: Date | undefined) => void;
  onRefresh: () => void;
  onExportAll: () => void;
  onSave: () => void;
  onSaveChecked: () => void;
  hasChanges: boolean; // –ï—Å—Ç—å –ª–∏ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  hasCheckedItems: boolean; // –ï—Å—Ç—å –ª–∏ –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSTable
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã showDeleted –∏ onToggleShowDeleted ***
 * *** –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω onAddShift ***
 */
export interface ISRSTableProps {
  items: ISRSRecord[];
  options: ISRSTableOptions;
  isLoading: boolean;
  onItemChange: (item: ISRSRecord, field: string, value: string | boolean | { hours: string; minutes: string }) => void;
  onLunchTimeChange: (item: ISRSRecord, value: string) => void;
  onContractNumberChange: (item: ISRSRecord, value: string) => void;
  // *** –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –æ—Ç–ø—É—Å–∫–∞ ***
  onTypeOfLeaveChange?: (item: ISRSRecord, value: string) => void;
  // *** –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è ***
  showDeleteConfirmDialog?: (id: string) => void;
  showRestoreConfirmDialog?: (id: string) => void;
  onDeleteItem?: (id: string) => Promise<boolean>;
  onRestoreItem?: (id: string) => Promise<boolean>;
  // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–ø—Å—ã –¥–ª—è showDeleted ***
  showDeleted: boolean; // –§–ª–∞–≥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
  onToggleShowDeleted: (checked: boolean) => void; // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–ª–∞–≥–∞
  // *** –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω—ã ***
  onAddShift?: (date: Date, shiftData?: INewSRSShiftData) => Promise<boolean>;
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRSTableRow
 * –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤ –∏ delete/restore —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
 * *** –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω onAddShift ***
 */
export interface ISRSTableRowProps {
  item: ISRSRecord;
  options: ISRSTableOptions;
  isEven: boolean; // –î–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ —Å—Ç—Ä–æ–∫
  onItemChange: (item: ISRSRecord, field: string, value: string | boolean | { hours: string; minutes: string }) => void;
  // *** –ù–û–í–û–ï: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ***
  onTypeOfLeaveChange?: (item: ISRSRecord, value: string) => void;
  // *** –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è ***
  showDeleteConfirmDialog?: (id: string) => void;
  showRestoreConfirmDialog?: (id: string) => void;
  onDeleteItem?: (id: string) => Promise<boolean>;
  onRestoreItem?: (id: string) => Promise<boolean>;
  // *** –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω—ã ***
  onAddShift?: (date: Date, shiftData?: INewSRSShiftData) => Promise<boolean>;
}

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ SRS –≤–∫–ª–∞–¥–∫–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
 * –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤ –∏ showDeleted
 */
export interface ISRSTabState {
  fromDate: Date;
  toDate: Date;
  srsData: ISRSRecord[];
  totalHours: string;
  isLoading: boolean;
  error?: string;
  hasUnsavedChanges: boolean;
  selectedItems: Set<string>; // ID –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
  // *** –ù–û–í–û–ï: –¢–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤ ***
  typesOfLeave: Array<{ id: string; title: string; color?: string }>; // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∏–ø–æ–≤ –æ—Ç–ø—É—Å–∫–æ–≤
  isLoadingTypesOfLeave: boolean;
  // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ showDeleted ***
  showDeleted: boolean; // –§–ª–∞–≥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
}

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å SRS –¥–∞–Ω–Ω—ã–º–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
 */
export interface ISRSOperationParams {
  fromDate: Date;
  toDate: Date;
  staffId: string;
  managerId?: string;
  staffGroupId?: string;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ SRS
 */
export interface ISRSExportResult {
  success: boolean;
  fileName?: string;
  error?: string;
  recordsCount?: number;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è SRS
 */
export interface ISRSSaveResult {
  success: boolean;
  savedCount: number;
  failedCount: number;
  errors?: string[];
}

/**
 * *** –ù–û–í–´–ï –ò–ù–¢–ï–†–§–ï–ô–°–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –¢–ò–ü–ê–ú–ò –û–¢–ü–£–°–ö–û–í ***
 */

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–∏–ø–æ–≤ –æ—Ç–ø—É—Å–∫–æ–≤ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 */
export interface ISRSTypeOfLeave {
  id: string;
  title: string;
  color?: string;
}

/**
 * *** –ù–û–í–´–ï –ò–ù–¢–ï–†–§–ï–ô–°–´ –î–õ–Ø DELETE/RESTORE –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê ***
 */

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
 */
export interface ISRSDeleteResult {
  success: boolean;
  recordId: string;
  error?: string;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
 */
export interface ISRSRestoreResult {
  success: boolean;
  recordId: string;
  error?: string;
}

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω–∏—è/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export interface ISRSDeleteRestoreParams {
  recordId: string;
  staffId: string;
  currentUserId: string;
  managingGroupId: string;
}

/**
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è showDeleted —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ***
 */

/**
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–¥–∞–ª–µ–Ω–Ω—ã–º –∑–∞–ø–∏—Å—è–º
 */
export interface ISRSDeletedStatistics {
  totalRecords: number;
  activeRecords: number;
  deletedRecords: number;
  deletedPercentage: number;
  showDeleted: boolean;
}

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–µ–π
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ showDeleted ***
 */
export interface ISRSFilterParams {
  fromDate: Date;
  toDate: Date;
  showDeleted: boolean; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω optional, —Å–¥–µ–ª–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º ***
  staffId?: string;
  typeOfLeave?: string;
}

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SRS Tab
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –¥–ª—è showDeleted ***
 */
export interface ISRSTabProps {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–ø—Å—ã
  selectedStaff?: { id: string; name: string; employeeId: string };
  context?: unknown;
  currentUserId?: string;
  managingGroupId?: string;
  
  // –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  fromDate: Date;
  toDate: Date;
  srsRecords: ISRSRecord[];
  totalHours: string;
  
  // –¢–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤
  typesOfLeave: ISRSTypeOfLeave[];
  isLoadingTypesOfLeave: boolean;
  
  // *** –ù–û–í–û–ï: –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ ***
  holidays: Array<{ id: string; title: string; date: Date }>; // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
  isLoadingHolidays: boolean;
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  isLoading: boolean;
  isLoadingSRS: boolean;
  
  // –û—à–∏–±–∫–∏
  error?: string;
  errorSRS?: string;
  
  // –ò–∑–º–µ–Ω–µ–Ω–∏—è –∏ –≤—ã–±–æ—Ä
  hasUnsavedChanges: boolean;
  selectedItems: Set<string>;
  hasCheckedItems: boolean;
  
  // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –¥–ª—è showDeleted ***
  showDeleted: boolean; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω optional, —Å–¥–µ–ª–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º ***
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  onFromDateChange: (date: Date | undefined) => void;
  onToDateChange: (date: Date | undefined) => void;
  onRefreshData: () => void;
  onExportAll: () => void;
  onSave: () => void;
  onSaveChecked: () => void;
  onItemChange: (item: ISRSRecord, field: string, value: string | boolean | { hours: string; minutes: string }) => void;
  onLunchTimeChange: (item: ISRSRecord, value: string) => void;
  onContractNumberChange: (item: ISRSRecord, value: string) => void;
  onTypeOfLeaveChange: (item: ISRSRecord, value: string) => void;
  
  // *** –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ ***
  loadHolidays: () => void;
  
  // *** –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ delete/restore ***
  onDeleteRecord: (recordId: string) => Promise<ISRSDeleteResult>;
  onRestoreRecord: (recordId: string) => Promise<ISRSRestoreResult>;
  
  // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ showDeleted ***
  onToggleShowDeleted: (checked: boolean) => void; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω optional, —Å–¥–µ–ª–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º ***
  
  // *** –ù–û–í–û–ï: –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω—ã ***
  onAddShift: (date: Date, shiftData?: INewSRSShiftData) => Promise<boolean>;
}

/**
 * *** –ù–û–í–û–ï: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ü–∏–π SRS —Ç–∞–±–ª–∏—Ü—ã ***
 * –§—É–Ω–∫—Ü–∏—è-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ü–∏–π —Å —Ç–∏–ø–∞–º–∏ –æ—Ç–ø—É—Å–∫–æ–≤
 */
export interface ISRSTableOptionsConfig {
  /**
   * –°–æ–∑–¥–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è SRS —Ç–∞–±–ª–∏—Ü—ã –≤–∫–ª—é—á–∞—è —Ç–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤
   */
  createSRSTableOptions: (typesOfLeave: ISRSTypeOfLeave[]) => ISRSTableOptions;
}

/**
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ***
 */

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ***
 */
export interface ISRSDeleteConfirmDialogProps {
  isOpen: boolean;
  recordId: string;
  recordDate?: string;
  staffName?: string;
  onConfirm: (recordId: string) => void; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ***
  onCancel: () => void; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ***
}

/**
 * –ü—Ä–æ–ø—Å—ã –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
 * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ***
 */
export interface ISRSRestoreConfirmDialogProps {
  isOpen: boolean;
  recordId: string;
  recordDate?: string;
  staffName?: string;
  onConfirm: (recordId: string) => void; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ***
  onCancel: () => void; // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ***
}

/**
 * *** –û–ë–ù–û–í–õ–ï–ù–ù–´–ï: –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ –æ—Ç–ø—É—Å–∫–æ–≤ –≤ SRS ***
 */
export class SRSTableOptionsHelper {
  /**
   * –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è SRS —Ç–∞–±–ª–∏—Ü—ã
   */
  public static createStandardOptions(): Omit<ISRSTableOptions, 'leaveTypes'> {
    return {
      hours: Array.from({ length: 24 }, (_, i) => ({
        key: i.toString().padStart(2, '0'),
        text: i.toString().padStart(2, '0')
      })),
      minutes: Array.from({ length: 12 }, (_, i) => {
        const value = (i * 5).toString().padStart(2, '0');
        return { key: value, text: value };
      }),
      lunchTimes: Array.from({ length: 13 }, (_, i) => {
        const value = (i * 5).toString();
        return { key: value, text: value };
      }),
      contractNumbers: [
        { key: '1', text: '1' },
        { key: '2', text: '2' },
        { key: '3', text: '3' }
      ]
    };
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –æ—Ç–ø—É—Å–∫–æ–≤
   */
  public static createLeaveTypesOptions(typesOfLeave: ISRSTypeOfLeave[]): IDropdownOption[] {
    const options: IDropdownOption[] = [
      { key: '', text: 'None' } // –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç - "–ù–µ—Ç —Ç–∏–ø–∞ –æ—Ç–ø—É—Å–∫–∞"
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –æ—Ç–ø—É—Å–∫–æ–≤ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
    typesOfLeave.forEach(type => {
      options.push({
        key: type.id,
        text: type.title,
        data: { color: type.color } // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–≤–µ—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      });
    });

    return options;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è SRS —Ç–∞–±–ª–∏—Ü—ã
   */
  public static createFullSRSTableOptions(typesOfLeave: ISRSTypeOfLeave[]): ISRSTableOptions {
    const standardOptions = SRSTableOptionsHelper.createStandardOptions();
    const leaveTypesOptions = SRSTableOptionsHelper.createLeaveTypesOptions(typesOfLeave);

    return {
      ...standardOptions,
      leaveTypes: leaveTypesOptions
    };
  }

  /**
   * –ù–∞—Ö–æ–¥–∏—Ç —Ç–∏–ø –æ—Ç–ø—É—Å–∫–∞ –ø–æ ID
   */
  public static findLeaveTypeById(typesOfLeave: ISRSTypeOfLeave[], id: string): ISRSTypeOfLeave | undefined {
    return typesOfLeave.find(type => type.id === id);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –æ—Ç–ø—É—Å–∫–∞ –ø–æ ID
   */
  public static getLeaveTypeTitle(typesOfLeave: ISRSTypeOfLeave[], id: string): string {
    const leaveType = SRSTableOptionsHelper.findLeaveTypeById(typesOfLeave, id);
    return leaveType ? leaveType.title : 'Unknown';
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ü–≤–µ—Ç —Ç–∏–ø–∞ –æ—Ç–ø—É—Å–∫–∞ –ø–æ ID
   */
  public static getLeaveTypeColor(typesOfLeave: ISRSTypeOfLeave[], id: string): string | undefined {
    const leaveType = SRSTableOptionsHelper.findLeaveTypeById(typesOfLeave, id);
    return leaveType?.color;
  }

  /**
   * *** –ù–û–í–û–ï: –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º ***
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å
   */
  public static canDeleteRecord(record: ISRSRecord): { canDelete: boolean; reason?: string } {
    // –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —É–∂–µ —É–¥–∞–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
    if (record.deleted) {
      return { canDelete: false, reason: 'Record is already deleted' };
    }

    // –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ª—é–±—É—é –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
    return { canDelete: true };
  }

  /**
   * *** –ù–û–í–û–ï: –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º ***
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
   */
  public static canRestoreRecord(record: ISRSRecord): { canRestore: boolean; reason?: string } {
    // –ú–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —É–¥–∞–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
    if (!record.deleted) {
      return { canRestore: false, reason: 'Record is not deleted' };
    }

    // –ú–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª—é–±—É—é —É–¥–∞–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
    return { canRestore: true };
  }

  /**
   * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π ***
   */
  public static getDeletedRecordsStatistics(records: ISRSRecord[]): ISRSDeletedStatistics {
    const totalRecords = records.length;
    const deletedRecords = records.filter(r => r.deleted === true).length;
    const activeRecords = totalRecords - deletedRecords;
    const deletedPercentage = totalRecords > 0 ? Math.round((deletedRecords / totalRecords) * 100) : 0;

    return {
      totalRecords,
      activeRecords,
      deletedRecords,
      deletedPercentage,
      showDeleted: false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã–∑—ã–≤–∞—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω–æ–π
    };
  }

  /**
   * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø–∏—Å–µ–π –ø–æ —Å—Ç–∞—Ç—É—Å—É —É–¥–∞–ª–µ–Ω–∏—è ***
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∑–∞–ø–∏—Å–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ showDeleted
   */
  public static filterRecordsByDeletedStatus(
    records: ISRSRecord[], 
    showDeleted: boolean // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω optional, —Å–¥–µ–ª–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º ***
  ): ISRSRecord[] {
    if (showDeleted) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
      return records;
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏
      return records.filter(record => record.deleted !== true);
    }
  }

  /**
   * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è UI ***
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Å —É—á–µ—Ç–æ–º showDeleted
   */
  public static getRecordsDisplayText(
    records: ISRSRecord[], 
    showDeleted: boolean // *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω optional, —Å–¥–µ–ª–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º ***
  ): {
    mainText: string;
    detailText: string;
  } {
    const stats = SRSTableOptionsHelper.getDeletedRecordsStatistics(records);
    const visibleCount = showDeleted ? stats.totalRecords : stats.activeRecords;
    
    const mainText = `Showing ${visibleCount} of ${stats.totalRecords} records`;
    
    let detailText = '';
    if (stats.deletedRecords > 0) {
      detailText = `(${stats.activeRecords} active, ${stats.deletedRecords} deleted)`;
    }
    
    return { mainText, detailText };
  }

  /**
   * *** –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∫–∞–∑–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è ***
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "Show deleted"
   */
  public static shouldShowDeletedToggle(records: ISRSRecord[]): boolean {
    const stats = SRSTableOptionsHelper.getDeletedRecordsStatistics(records);
    return stats.deletedRecords > 0; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
  }

  /**
   * *** –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ showDeleted —Å–æ—Å—Ç–æ—è–Ω–∏–π ***
   * –ü–æ–º–æ–≥–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ showDeleted –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
   */
  public static validateShowDeletedState(
    parentShowDeleted: boolean,
    childShowDeleted?: boolean
  ): {
    isConsistent: boolean;
    shouldUpdate: boolean;
    expectedValue: boolean;
  } {
    const isConsistent = childShowDeleted === parentShowDeleted;
    const shouldUpdate = !isConsistent && childShowDeleted !== undefined;
    
    return {
      isConsistent,
      shouldUpdate,
      expectedValue: parentShowDeleted
    };
  }

  /**
   * *** –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ***
   * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
   */
  public static createFilterParams(
    fromDate: Date,
    toDate: Date,
    showDeleted: boolean, // *** –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –ü–ê–†–ê–ú–ï–¢–† ***
    staffId?: string,
    typeOfLeave?: string
  ): ISRSFilterParams {
    return {
      fromDate,
      toDate,
      showDeleted, // *** –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô ***
      staffId,
      typeOfLeave
    };
  }

  /**
   * *** –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ***
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
   */
  public static validateFilterParams(params: ISRSFilterParams): {
    isValid: boolean;
    errors: string[];
  } {
    const errors: string[] = [];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—ã
    if (!params.fromDate || !params.toDate) {
      errors.push('From date and to date are required');
    } else if (params.fromDate > params.toDate) {
      errors.push('From date must be before or equal to to date');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º showDeleted
    if (typeof params.showDeleted !== 'boolean') {
      errors.push('showDeleted must be a boolean value');
    }

    return {
      isValid: errors.length === 0,
      errors
    };
  }
}